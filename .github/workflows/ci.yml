name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Run linting
      run: yarn lint
    
    - name: Run tests
      run: yarn test
      env:
        NODE_ENV: test
    
    - name: Package serverless application
      run: yarn package
      env:
        BUCKET: test-bucket
        IMAGES_BUCKET: test-images-bucket

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Run security audit
      run: yarn audit --level moderate
      continue-on-error: true
    
    - name: Check for vulnerabilities
      run: |
        if yarn audit --level critical --json | grep -q '"type":"auditSummary".*"critical":[1-9]'; then
          echo "Critical vulnerabilities found!"
          exit 1
        fi