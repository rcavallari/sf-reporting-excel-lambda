name: Deploy to Production

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy (leave empty for latest)'
        required: false
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Run full test suite
      run: |
        yarn lint
        yarn test
      env:
        NODE_ENV: test
    
    - name: Security audit
      run: |
        if yarn audit --level critical --json | grep -q '"type":"auditSummary".*"critical":[1-9]'; then
          echo "Critical security vulnerabilities found! Blocking production deployment."
          exit 1
        fi

  deploy:
    runs-on: ubuntu-latest
    needs: [test]
    
    environment:
      name: production
      url: ${{ steps.deploy.outputs.endpoint }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile --production=false
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION || 'us-east-1' }}
    
    - name: Create deployment package
      run: yarn package
      env:
        BUCKET: ${{ vars.PROD_BUCKET }}
        IMAGES_BUCKET: ${{ vars.PROD_IMAGES_BUCKET }}
        IMAGES_REGION: us-east-1
    
    - name: Deploy to AWS Lambda
      id: deploy
      run: |
        yarn deploy:prod
        echo "endpoint=$(serverless info --stage prod --verbose | grep -o 'https://[^[:space:]]*')" >> $GITHUB_OUTPUT
      env:
        BUCKET: ${{ vars.PROD_BUCKET }}
        IMAGES_BUCKET: ${{ vars.PROD_IMAGES_BUCKET }}
        IMAGES_REGION: us-east-1
        AWS_REGION: ${{ vars.AWS_REGION || 'us-east-1' }}
    
    - name: Run post-deployment health checks
      run: |
        # Wait for Lambda to be ready
        sleep 60
        
        # Test health check endpoint
        ENDPOINT=$(serverless info --stage prod --verbose | grep -o 'https://[^[:space:]]*')
        
        # Retry health check up to 5 times
        for i in {1..5}; do
          if curl -f "${ENDPOINT}/health"; then
            echo "Health check passed on attempt $i"
            break
          elif [ $i -eq 5 ]; then
            echo "Health check failed after 5 attempts"
            exit 1
          else
            echo "Health check failed on attempt $i, retrying in 30s..."
            sleep 30
          fi
        done
      env:
        BUCKET: ${{ vars.PROD_BUCKET }}
        IMAGES_BUCKET: ${{ vars.PROD_IMAGES_BUCKET }}
        IMAGES_REGION: us-east-1
    
    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          ## Changes in this Release
          
          * Deployed to production: ${{ steps.deploy.outputs.endpoint }}
          * Service version: excel-report-service-prod-v1.0.0
          
          ## Health Check
          
          âœ… Production health check passed
        draft: false
        prerelease: false
    
    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "ðŸš€ Production deployment successful!"
          echo "Endpoint: ${{ steps.deploy.outputs.endpoint }}"
        else
          echo "ðŸ’¥ Production deployment failed!"
          exit 1
        fi